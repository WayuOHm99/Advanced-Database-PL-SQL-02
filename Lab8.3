-- สร้าง Package Specification
CREATE OR REPLACE PACKAGE EMP_PACKAGE AS
    PROCEDURE DEPT_REPORT(p_dept_id NUMBER);
    FUNCTION EMP_WORK_LOG(p_emp_id NUMBER) RETURN VARCHAR2;
END EMP_PACKAGE;
/

-- สร้าง Package Body
CREATE OR REPLACE PACKAGE BODY EMP_PACKAGE AS

    -- PROCEDURE: DEPT_REPORT
    PROCEDURE DEPT_REPORT(p_dept_id NUMBER) IS
        v_emp_name EMPLOYEES.FIRST_NAME%TYPE;
        v_salary EMPLOYEES.SALARY%TYPE;
    BEGIN
        -- ตรวจสอบว่าพารามิเตอร์ p_dept_id มีค่าถูกต้อง
        IF p_dept_id IS NULL OR p_dept_id <= 0 THEN
            DBMS_OUTPUT.PUT_LINE('Invalid department ID.');
            RETURN;
        END IF;
        
        -- ดึงข้อมูลพนักงานที่มีเงินเดือนสูงสุดในแผนก
        SELECT FIRST_NAME || ' ' || LAST_NAME, SALARY
        INTO v_emp_name, v_salary
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = p_dept_id
        AND SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES WHERE DEPARTMENT_ID = p_dept_id);
        
        -- แสดงข้อมูลพนักงานที่มีเงินเดือนสูงสุด
        DBMS_OUTPUT.PUT_LINE('Highest Paid Employee: ' || v_emp_name || ', Salary: ' || v_salary);
        
    EXCEPTION
        WHEN NO_DATA_FOUND THEN
            -- ข้อผิดพลาดเมื่อไม่พบพนักงานในแผนกที่ระบุ
            DBMS_OUTPUT.PUT_LINE('No employees found in department ' || p_dept_id);
        WHEN OTHERS THEN
            DBMS_OUTPUT.PUT_LINE('An error occurred: ' || SQLERRM);
    END DEPT_REPORT;

    -- FUNCTION: EMP_WORK_LOG
    FUNCTION EMP_WORK_LOG(p_emp_id NUMBER) RETURN VARCHAR2 IS
        v_message VARCHAR2(100);
    BEGIN
        -- ตรวจสอบว่า p_emp_id มีค่าถูกต้อง
        IF p_emp_id IS NULL OR p_emp_id <= 0 THEN
            RETURN 'Invalid employee ID.';
        END IF;

        -- เพิ่มข้อมูลการทำงานลงใน WORK_LOG
        INSERT INTO WORK_LOG (EMPLOYEE_ID, LOG_TIME)
        VALUES (p_emp_id, SYSTIMESTAMP);
        
        COMMIT;
        
        -- สร้างข้อความผลลัพธ์ที่จะแสดง
        v_message := 'Employee ' || p_emp_id || ' logged work on ' || 
                     TO_CHAR(SYSDATE, 'DD/MM/YYYY') || ' at ' || 
                     TO_CHAR(SYSDATE, 'HH:MI AM');
                     
        RETURN v_message;
        
    EXCEPTION
        WHEN OTHERS THEN
            RETURN 'An error occurred: ' || SQLERRM;
    END EMP_WORK_LOG;

END EMP_PACKAGE;
